#!/bin/bash
set -e
#set -x

GIT_REPO=$HOME/website-repo.git
WORKING_DIRECTORY=$HOME/website-repo-working

build_site() {
    rm -rf $WORKING_DIRECTORY
    rsync -aqz $PUBLIC_WWW/ $BACKUP_WWW
    trap "echo 'A problem occurred.  Reverting to backup.'; rsync -aqz --del $BACKUP_WWW/ $PUBLIC_$

    git clone -b $BRANCH $GIT_REPO $WORKING_DIRECTORY
    rm -rf $PUBLIC_WWW/*
    hugo -s $WORKING_DIRECTORY -d $PUBLIC_WWW -b "http://${MY_DOMAIN}"
    # disable until i figure out how to enable static gzip in nginx
    #find $PUBLIC_WWW -type f \( -name '*.html' -o -name '*.js' -o -name '*.css' -o -name '*.xml' $
    rm -rf $WORKING_DIRECTORY
}

while read oldrev newrev ref
do
    if [[ $ref =~ .*/staging$ ]]
    then
        BRANCH=staging
        PUBLIC_WWW=$HOME/staging.gamesrightmeow.com/html
        BACKUP_WWW=$HOME/staging.gamesrightmeow.com/backup_html
        MY_DOMAIN=staging.gamesrightmeow.com
        echo "Building staging"
        build_site
    elif [[ $ref =~ .*/live$ ]]
    then
        BRANCH=live
        PUBLIC_WWW=$HOME/gamesrightmeow.com/html
        BACKUP_WWW=$HOME/gamesrightmeow.com/backup_html
        MY_DOMAIN=gamesrightmeow.com
        echo "Building live"
        build_site
    else
        echo "Ref $ref successfully received.  Doing nothing: only the master branch may be deploy$
    fi
done

echo "Complete"
trap - EXIT


